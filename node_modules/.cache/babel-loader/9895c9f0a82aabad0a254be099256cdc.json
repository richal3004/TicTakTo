{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Richal/React/TicTakTo/tictakto/TicTakTo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // class Square extends React.Component {\n//   // constructor(props){\n//   //   super(props);\n//   //   this.state ={\n//   //     value: null,\n//   //   };\n//   // }\n//   render() {\n//     return (\n//       <button\n//         className=\"square\" \n//         onClick={() => this.props.onClick()}\n//       >\n//         {this.props.value}\n//       </button>\n//     );\n//   }\n// }\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    const winLine = this.props.winLine;\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      highlight: winLine && winLine.include(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const boardSize = 3;\n    let squares = [];\n\n    for (let i = 0; i < boardSize; i++) {\n      let row = [];\n\n      for (let j = 0; j < boardSize; j++) {\n        row.push(this.renderSquare(i * boardSize + j));\n      }\n\n      squares.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: squares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this) // <div>\n    //   <div className=\"board-row\">\n    //     {this.renderSquare(0)}\n    //     {this.renderSquare(1)}\n    //     {this.renderSquare(2)}\n    //   </div>\n    //   <div className=\"board-row\">\n    //     {this.renderSquare(3)}\n    //     {this.renderSquare(4)}\n    //     {this.renderSquare(5)}\n    //   </div>\n    //   <div className=\"board-row\">\n    //     {this.renderSquare(6)}\n    //     {this.renderSquare(7)}\n    //     {this.renderSquare(8)}\n    //   </div>\n    // </div>\n    ;\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        latestMoveSquare: i\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const stepNumber = this.state.stepNumber;\n    const current = history[this.state.stepNumber];\n    const winInfo = calculateWinner(current.squares);\n    const winner = winInfo.winner;\n    const moves = history.map((step, move) => {\n      const latestMoveSquare = step.latestMoveSquare;\n      const col = 1 + latestMoveSquare % 3;\n      const row = 1 + Math.floor(latestMoveSquare / 3);\n      const desc = move ? 'Go to move #' + move + '(' + col + ',' + row + ')' : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: move === stepNumber ? 'move-list-item-selected' : '',\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      if (winInfo.isDraw) {}\n\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          winLine: winInfo.line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 168,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: lines[i],\n        isDraw: false\n      };\n    }\n  }\n\n  let isDraw = true;\n\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] === null) {\n      isDraw = false;\n      break;\n    }\n  }\n\n  return {\n    winner: null,\n    line: null,\n    isDraw: isDraw\n  };\n}\n\nfunction Square1(props) {\n  const className = 'square' + (props.hightlight ? 'hightlight' : '');\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Square1;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Square1\");","map":{"version":3,"sources":["/Volumes/Richal/React/TicTakTo/tictakto/TicTakTo/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","winLine","squares","include","render","boardSize","row","j","push","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","winner","setState","concat","latestMoveSquare","jumpTo","step","winInfo","moves","map","move","col","Math","floor","desc","status","isDraw","line","document","getElementById","lines","a","b","c","Square1","className","hightlight"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AACpB,sBAAO;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEA,KAAK,CAACC,OAA1C;AAAA,cACJD,KAAK,CAACE;AADF;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD;;KAJQH,M;;AAOT,MAAMI,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAElCC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,UAAMC,OAAO,GAAE,KAAKP,KAAL,CAAWO,OAA1B;AACA,wBAAQ,QAAC,MAAD;AACN,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,OAAX,CAAmBF,CAAnB,CADD;AAEN,MAAA,OAAO,EAAE,MAAK,KAAKN,KAAL,CAAWC,OAAX,CAAmBK,CAAnB,CAFR;AAGN,MAAA,SAAS,EAAIC,OAAO,IAAIA,OAAO,CAACE,OAAR,CAAgBH,CAAhB;AAHlB;AAAA;AAAA;AAAA;AAAA,YAAR;AAMD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAC,CAAhB;AACA,QAAIH,OAAO,GAAE,EAAb;;AACA,SAAI,IAAIF,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACK,SAAf,EAAyBL,CAAC,EAA1B,EAA6B;AAC3B,UAAIM,GAAG,GAAC,EAAR;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,SAAf,EAA0BE,CAAC,EAA3B,EAA8B;AAC5BD,QAAAA,GAAG,CAACE,IAAJ,CAAS,KAAKT,YAAL,CAAkBC,CAAC,GAAGK,SAAJ,GAAeE,CAAjC,CAAT;AACD;;AACDL,MAAAA,OAAO,CAACM,IAAR,eAAa;AAAa,QAAA,SAAS,EAAC,WAAvB;AAAA,kBAAoCF;AAApC,SAAUN,CAAV;AAAA;AAAA;AAAA;AAAA,cAAb;AACD;;AACD,wBACE;AAAA,gBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBF;AAoBD;;AA1CiC;;AA6CpC,MAAMO,IAAN,SAAmBlB,KAAK,CAACO,SAAzB,CAAmC;AACjCY,EAAAA,WAAW,CAAChB,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKiB,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CACP;AACEV,QAAAA,OAAO,EAAEW,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADX,OADO,CADE;AAMXC,MAAAA,UAAU,EAAE,CAND;AAOXC,MAAAA,OAAO,EAAE;AAPE,KAAb;AASD;;AAEDC,EAAAA,WAAW,CAACjB,CAAD,EAAI;AACb,UAAMY,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBM,KAAnB,CAAyB,CAAzB,EAA4B,KAAKP,KAAL,CAAWI,UAAX,GAAwB,CAApD,CAAhB;AACA,UAAMI,OAAO,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMlB,OAAO,GAAGiB,OAAO,CAACjB,OAAR,CAAgBgB,KAAhB,EAAhB;;AACA,QAAIG,eAAe,CAACnB,OAAD,CAAf,CAAyBoB,MAAzB,IAAmCpB,OAAO,CAACF,CAAD,CAA9C,EAAmD;AACjD;AACD;;AACDE,IAAAA,OAAO,CAACF,CAAD,CAAP,GAAa,KAAKW,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAA2B,GAAxC;AACA,SAAKO,QAAL,CAAc;AACZX,MAAAA,OAAO,EAAEA,OAAO,CAACY,MAAR,CAAe,CAAC;AACvBtB,QAAAA,OAAO,EAAEA,OADc;AAEvBuB,QAAAA,gBAAgB,EAAEzB;AAFK,OAAD,CAAf,CADG;AAKZe,MAAAA,UAAU,EAAEH,OAAO,CAACQ,MALR;AAMZJ,MAAAA,OAAO,EAAE,CAAC,KAAKL,KAAL,CAAWK;AANT,KAAd;AAQD;;AAEDU,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,SAAKJ,QAAL,CAAc;AACZR,MAAAA,UAAU,EAAEY,IADA;AAEZX,MAAAA,OAAO,EAAGW,IAAI,GAAG,CAAR,KAAe;AAFZ,KAAd;AAID;;AAEDvB,EAAAA,MAAM,GAAG;AACP,UAAMQ,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMG,UAAU,GAAE,KAAKJ,KAAL,CAAWI,UAA7B;AACA,UAAMI,OAAO,GAAGP,OAAO,CAAC,KAAKD,KAAL,CAAWI,UAAZ,CAAvB;AACA,UAAMa,OAAO,GAAGP,eAAe,CAACF,OAAO,CAACjB,OAAT,CAA/B;AACA,UAAMoB,MAAM,GAAGM,OAAO,CAACN,MAAvB;AAEA,UAAMO,KAAK,GAAEjB,OAAO,CAACkB,GAAR,CAAY,CAACH,IAAD,EAAOI,IAAP,KAAc;AACrC,YAAMN,gBAAgB,GAAGE,IAAI,CAACF,gBAA9B;AACA,YAAMO,GAAG,GAAG,IAAIP,gBAAgB,GAAG,CAAnC;AACA,YAAMnB,GAAG,GAAG,IAAI2B,IAAI,CAACC,KAAL,CAAWT,gBAAgB,GAAE,CAA7B,CAAhB;AACA,YAAMU,IAAI,GAAGJ,IAAI,GACf,iBAAiBA,IAAjB,GAAwB,GAAxB,GAA6BC,GAA7B,GAAkC,GAAlC,GAAwC1B,GAAxC,GAA6C,GAD9B,GAEf,kBAFF;AAGA,0BACA;AAAA,+BACE;AACE,UAAA,SAAS,EAAEyB,IAAI,KAAKhB,UAAT,GAAsB,yBAAtB,GAAiD,EAD9D;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKW,MAAL,CAAYK,IAAZ,CAFjB;AAAA,oBAEqCI;AAFrC;AAAA;AAAA;AAAA;AAAA;AADF,SAASJ,IAAT;AAAA;AAAA;AAAA;AAAA,cADA;AAOD,KAdY,CAAb;AAeA,QAAIK,MAAJ;;AACA,QAAId,MAAJ,EAAY;AACVc,MAAAA,MAAM,GAAG,aAAad,MAAtB;AACD,KAFD,MAEO;AACL,UAAGM,OAAO,CAACS,MAAX,EAAkB,CAAE;;AACpBD,MAAAA,MAAM,GAAG,mBAAmB,KAAKzB,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAA2B,GAA9C,CAAT;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,OAAO,EAAEG,OAAO,CAACjB,OADnB;AAEE,UAAA,OAAO,EAAGF,CAAD,IAAO,KAAKiB,WAAL,CAAiBjB,CAAjB,CAFlB;AAGE,UAAA,OAAO,EAAE4B,OAAO,CAACU;AAHnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKP;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AApFgC,C,CAwFnC;;;AAEArC,QAAQ,CAACY,MAAT,eACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEmC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;;AAKA,SAASnB,eAAT,CAAyBnB,OAAzB,EACA;AACE,QAAMuC,KAAK,GAAC,CACV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADU,EAEV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFU,EAGV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHU,EAIV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAJU,EAKV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CALU,EAMV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CANU,EAOV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAPU,EAQV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CARU,CAAZ;;AAUA,OAAI,IAAIzC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACyC,KAAK,CAACrB,MAApB,EAA2BpB,CAAC,EAA5B,EACA;AACE,UAAM,CAAC0C,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAUH,KAAK,CAACzC,CAAD,CAArB;;AACA,QAAIE,OAAO,CAACwC,CAAD,CAAP,IAAcxC,OAAO,CAACwC,CAAD,CAAP,KAAexC,OAAO,CAACyC,CAAD,CAApC,IAA2CzC,OAAO,CAACwC,CAAD,CAAP,KAAexC,OAAO,CAAC0C,CAAD,CAArE,EACA;AACE,aAAO;AACLtB,QAAAA,MAAM,EAAEpB,OAAO,CAACwC,CAAD,CADV;AAELJ,QAAAA,IAAI,EAAEG,KAAK,CAACzC,CAAD,CAFN;AAGLqC,QAAAA,MAAM,EAAE;AAHH,OAAP;AAKD;AACF;;AACD,MAAIA,MAAM,GAAG,IAAb;;AACA,OAAK,IAAIrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,OAAO,CAACkB,MAA5B,EAAoCpB,CAAC,EAArC,EAAyC;AACvC,QAAIE,OAAO,CAACF,CAAD,CAAP,KAAe,IAAnB,EAAyB;AACvBqC,MAAAA,MAAM,GAAG,KAAT;AACA;AACD;AACF;;AACD,SAAO;AACLf,IAAAA,MAAM,EAAE,IADH;AAELgB,IAAAA,IAAI,EAAE,IAFD;AAGLD,IAAAA,MAAM,EAAEA;AAHH,GAAP;AAKD;;AAED,SAASQ,OAAT,CAAiBnD,KAAjB,EAAuB;AACrB,QAAMoD,SAAS,GAAC,YAAYpD,KAAK,CAACqD,UAAN,GAAmB,YAAnB,GAAkC,EAA9C,CAAhB;AACA,sBACE;AACA,IAAA,SAAS,EAAED,SADX;AAEA,IAAA,OAAO,EAAEpD,KAAK,CAACC,OAFf;AAAA,cAIGD,KAAK,CAACE;AAJT;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;MAVQiD,O","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n// class Square extends React.Component {\n//   // constructor(props){\n//   //   super(props);\n//   //   this.state ={\n//   //     value: null,\n//   //   };\n//   // }\n//   render() {\n//     return (\n//       <button\n//         className=\"square\" \n//         onClick={() => this.props.onClick()}\n//       >\n//         {this.props.value}\n//       </button>\n//     );\n//   }\n// }\n\nfunction Square(props){\n  return(<button className=\"square\" onClick={props.onClick}>\n    {props.value}\n  </button>);\n}\n\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    const winLine =this.props.winLine;\n    return (<Square \n      value={this.props.squares[i]} \n      onClick={()=> this.props.onClick(i)}\n      highlight = {winLine && winLine.include(i)}\n      />\n    );\n  }\n\n  render() {\n    const boardSize=3;\n    let squares= [];\n    for(let i=0; i<boardSize;i++){\n      let row=[];\n      for(let j=0; j<boardSize; j++){\n        row.push(this.renderSquare(i * boardSize +j));\n      }\n      squares.push(<div key={i} className=\"board-row\">{row}</div>);\n    }\n    return (\n      <div>{squares}</div>\n      // <div>\n      //   <div className=\"board-row\">\n      //     {this.renderSquare(0)}\n      //     {this.renderSquare(1)}\n      //     {this.renderSquare(2)}\n      //   </div>\n      //   <div className=\"board-row\">\n      //     {this.renderSquare(3)}\n      //     {this.renderSquare(4)}\n      //     {this.renderSquare(5)}\n      //   </div>\n      //   <div className=\"board-row\">\n      //     {this.renderSquare(6)}\n      //     {this.renderSquare(7)}\n      //     {this.renderSquare(8)}\n      //   </div>\n      // </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null)\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        latestMoveSquare: i\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n  \n  render() {\n    const history = this.state.history;\n    const stepNumber =this.state.stepNumber;\n    const current = history[this.state.stepNumber];\n    const winInfo = calculateWinner(current.squares);\n    const winner = winInfo.winner;\n\n    const moves =history.map((step, move)=>{\n      const latestMoveSquare = step.latestMoveSquare;\n      const col = 1 + latestMoveSquare % 3;\n      const row = 1 + Math.floor(latestMoveSquare /3);\n      const desc = move ? \n        'Go to move #' + move + '('+ col +',' + row+ ')' : \n        'Go to game start';\n      return (\n      <li key={move}>\n        <button \n          className={move === stepNumber ? 'move-list-item-selected': ''}\n          onClick={() => this.jumpTo(move)}>{desc}</button>\n      </li>\n      );\n    });\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      if(winInfo.isDraw){}\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            winLine={winInfo.line}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares)\n{\n  const lines=[\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6],\n  ];\n  for(let i=0;i<lines.length;i++)\n  {\n    const [a, b, c]=lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c])\n    {\n      return {\n        winner: squares[a],\n        line: lines[i],\n        isDraw: false,\n      };\n    }\n  }\n  let isDraw = true;\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] === null) {\n      isDraw = false;\n      break;\n    }\n  }\n  return {\n    winner: null,\n    line: null,\n    isDraw: isDraw,\n  };\n}\n\nfunction Square1(props){\n  const className='square' + (props.hightlight ? 'hightlight' : '')\n  return (\n    <button\n    className={className}\n    onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}"]},"metadata":{},"sourceType":"module"}